apiVersion: v1
kind: ConfigMap
metadata:
  name: pg-user-db-config
  labels:
    app: pg-user-db
data:
  POSTGRES_DB: user_db
  POSTGRES_USER: epam_user
  POSTGRES_PASSWORD: epam

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: pg-user-db-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 100M
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

#spec:
#  storageClassName: manual
#  capacity:
#    storage: 5Gi
#  accessModes:
#    - ReadWriteMany
#  hostPath:
#    path: "/data/volume"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pg-user-db-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100M

#  storageClassName: standard
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-user-db-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-user-db-deploy
  template:
    metadata:
      labels:
        app: pg-user-db-deploy
    spec:
      containers:
        - name: pg-user-db-deploy
          image: postgres:10.1
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: pg-user-db-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pg-user-db-volume
      volumes:
        - name: pg-user-db-volume
          persistentVolumeClaim:
            claimName: pg-user-db-claim

---

apiVersion: v1
kind: Service
metadata:
  name: pg-user-db-svc
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: pg-user-db-deploy






