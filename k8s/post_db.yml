#apiVersion: v1
#kind: ConfigMap
#metadata:
#  name: pg-post-db-config
#  labels:
#    app: pg-post-db
#data:
#  POSTGRES_DB: post_db
#  POSTGRES_USER: epam_post
#  POSTGRES_PASSWORD: epam
#
#---
#
#kind: PersistentVolume
#apiVersion: v1
#metadata:
#  name: pg-post-db-volume
#  labels:
#    type: local
#    app: pg-post-db
#spec:
#  storageClassName: manual
#  capacity:
#    storage: 5Gi
#  accessModes:
#    - ReadWriteMany
#  hostPath:
#    path: "/mnt/data"
#
#---
#
#kind: PersistentVolumeClaim
#apiVersion: v1
#metadata:
#  name: pg-post-db-claim
#  labels:
#    app: pg-post-db
#spec:
#  storageClassName: manual
#  accessModes:
#    - ReadWriteMany
#  resources:
#    requests:
#      storage: 5Gi
#
#---
#
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: pg-post-db-deploy
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: pg-post-db-deploy
#  template:
#    metadata:
#      labels:
#        app: pg-post-db-deploy
#    spec:
#      containers:
#        - name: pg-post-db-deploy
#          image: postgres:10.1
#          imagePullPolicy: "IfNotPresent"
#          ports:
#            - containerPort: 5432
#          envFrom:
#            - configMapRef:
#                name: pg-post-db-config
#          volumeMounts:
#            - mountPath: /var/lib/postgresql/data
#              name: pg-post-db-volume
#      volumes:
#        - name: pg-post-db-volume
#          persistentVolumeClaim:
#            claimName: pg-post-db-claim
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: pg-post-db-svc
#spec:
#  type: NodePort
#  ports:
#    - port: 5432
#  selector:
#    app: pg-post-db-deploy